@model SignerPrescriptionSample.Models.CreatePrescriptionModel
@{
    ViewData["Title"] = "Prescription";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<div id="signature">
    <form>
        <div id="signin" style="margin-top:30px">
            <div id="patient-info-container" class="col-lg-5 card">
                <div class="row justify-content-center card-body">
                    <h2 class="card-title fw-bold cstm-font-clr">Informações do Médico</h2>
                    <h5 id="infoData" class="text-md-start">Informe os dados do médico que irá assinar esse documento:</h5>
                    <div class="form-group">
                        <div id="box">
                            @Html.HiddenFor(m => m.UserCert.SubjectDisplayName, new { id = "nome" })
                            @Html.HiddenFor(m => m.UserCert.EmailAddress, new { id = "email" })
                            @Html.HiddenFor(m => m.UserCert.PkiBrazil.CpfFormatted, new { id = "cpf" })
                            @Html.HiddenFor(m => m.CpfManual, new { id = "cpfManual" })
                            <div class="row mb-3 justify-content-center">
                                <div class="col-md">
                                    <div class="form-floating">
                                        @Html.TextBoxFor(m => m.CRM, new { id = "crm", placeholder = "CRM", @class = "form-control transparent-input", onkeyup = "enablePrescriptionButton()" })
                                        @Html.LabelFor(m => m.CRM, "CRM")
                                        @Html.ValidationMessageFor(m => m.CRM, "É necessário informar um CRM", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md">
                                    <div class="form-floating">
                                        @Html.DropDownListFor(m => m.UF, CreatePrescriptionModel.GetUFs(), new { @class = "form-select transparent-input", id = "uf", @placeholder = "UF" })
                                        @Html.LabelFor(m => m.UF, "UF")
                                        @Html.ValidationMessageFor(m => m.UF, "É necessário informar uma unidade federativa", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-md-center">
                            <input id="criarReceitaButton" type="button" disabled value="Criar prescrição" onclick="showApp()" placeholder="Criar prescrição" class="btn btn-primary btn-clr w-100" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="main" hidden class="container" style="margin-top:30px">
            <div id="grid-separator" class="row">
                <div id="patient-info-container" class="col-md-4 card">
                    <div class="row justify-content-center card-body">
                        <div class="mb-2">
                            <h1 class="card-title fs-1 fw-bold cstm-font-clr">Informações da Prescrição</h1>
                        </div>
                    </div>
                    <div id="form-hide" class="text-center">
                        <div class="form-group">
                            <div class="mb-2">
                                <div class="form-floating">
                                    @Html.TextBoxFor(m => m.PatientName, new {
                                            id = "paciente",
                                            placeholder = "Nome do paciente",
                                            onkeyup = "enableButton()",
                                            @class = "form-control transparent-input"
                                        })
                                    <label for="paciente">Nome do paciente</label>
                                @Html.ValidationMessageFor(m => m.PatientName, "É necessário informar o nome do paciente", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="mb-2">
                                <div class="form-floating">
                                    @Html.TextBoxFor(m => m.PatientIdentifier, new {
                                            id = "cpf-paciente",
                                            placeholder = "CPF do paciente",
                                            onkeyup = "enableButton()",
                                            oninput = "applyCpfMask(this)",
                                            @class = "form-control transparent-input"
                                        })
                                    <label for="cpf-paciente">CPF do paciente</label>
                                @Html.ValidationMessageFor(m => m.PatientIdentifier, "É necessário informar o CPF do paciente", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="mb-2">
                                <div class="form-floating">
                                    @Html.TextAreaFor(m => m.PatientIdentifier, new {
                                            id = "medicamento",
                                            maxlength = 500,
                                            placeholder = "Medicamento, posologia e quantidade",
                                            onkeyup = "enableButton()",
                                            @class = "form-control transparent-input expandable-text-area"
                                        })
                                    <label for="medicamento">Medicamento, posologia e quantidade</label>
                                @Html.ValidationMessageFor(m => m.PatientIdentifier, "É necessário informar o medicamento", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="mb-2">
                                <div class="text-center">
                                    <input class="form-check-input" type="checkbox" id="DocumentPreview" />
                                    <label class="form-check-label" for="DocumentPreview">Visualizar documento durante assinatura</label>
                                </div>
                            </div>
                            <div class="row text-center">
                                <div class="d-inline-block">
                                    <input id="start" type="button" disabled value="Assinar" onclick="startSignature(this)" placeholder="Assinar"
                                           class="form-control btn btn-primary btn-clr w-100" />
                                </div>
                            </div>
                            <div class="col-md-3 mt-3">
                                <div id="loadingHeader" class="center-div" style="display: none">
                                    <div class="inner-div">
                                        <div class="loader"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="whiteboard" hidden>
                    <div class="card h-100">
                        <div class="card-body h-100">
                            <div id="embed-container" class="frame-container"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>
<div class="row-cols-auto">
    <div class="col-sm-12">
        <div class="row justify-content-center" id="afterSigned" style="display: none">
            <div class="container col-lg-6 p-3 my-3 border rounded-3 bg-white">
                <div class="row justify-content-center">
                    <div class="row justify-content-center p-5">
                        <div class="col-md-auto">
                            <img src="~/Group 159ok.png" />
                        </div>
                    </div>
                    <div class="col-auto">
                        <h4> Sua prescrição foi criada com sucesso!</h4>
                    </div>
                    <div class="btn-group col-lg-8">
                        <button class="btn btn-primary rounded m-2" placeholder="Começar" onclick="openPrescriptionView()" type="button">VISUALIZAR PRESCRIÇÃO</button>
                        <button class="btn btn-primary rounded m-2" placeholder="Começar" onclick="download()" type="button">BAIXAR PRESCRIÇÃO</button>
                    </div>
                    <div class="row justify-content-center">
                        <div class="btn-group col-lg-4">
                            <a class="btn btn-outline-primary rounded btn-custom-outline m-2" asp-area="" asp-controller="Home" asp-action="Index" role="button">NOVA PRESCRIÇÃO</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        var documentId = '';
        var embedUrl = '';



        function showApp() {
            $('#main').attr('hidden', false);
            $('#main').show();
            $('#signin').hide();

        }

        function enablePrescriptionButton() {
            // Signer name
            var nameSigner = $('#nome').val();

            // Signer email
            var emailValue = $('#email').val();

            // Signer CPF
            var identifierValue = $('#cpf').val();

            // Signer CRM
            var crmValue = $('#crm').val().trim();

            // Test certificate checkbox value
            var checkboxValue = $('#certCheckbox').prop('checked');

            console.log(checkboxValue);

            if ((checkboxValue) || (nameSigner != "" && emailValue != "" && identifierValue != "" && crmValue != "")) {
                $("#criarReceitaButton").removeAttr('disabled');
            } else {
                $("#criarReceitaButton").attr('disabled', true);
            }
        }

        function sign(data, allowPreviewDocument) {
            hideButtons();
            allowPreviewDocument ? $("#whiteboard").addClass("col-md-7") : $("#whiteboard").addClass("col-md-4")
            var widget = allowPreviewDocument ? new LacunaSignerWidget() : new LacunaSignerWidget({ disableDocumentPreview: true });
            widget.render(data, 'embed-container');
            widget.on(widget.events.documentSigned, function (e) {
                documentId = e.id;
                // Removes the widget
                $('#embed-container').remove();
                // Container after signature
                $('#afterSigned').show();
                $('#signature').hide();
                $('#whiteboard').hide();
            });
        }



        function startSignature(elem) {

            // First disable all input fields so the user doesn't change them
            // Patient name
            var namePatient = $('#paciente').attr('disabled', 'true');

            // Patient CPF
            var patientIdentifier = $('#cpf-paciente').attr('disabled', 'true');

            // Medication name
            var medicationValue = $('#medicamento').attr('disabled', 'true');


            // Signer name
            var nameSigner = $('#nome').val();

            // Signer email
            var emailValue = $('#email').val();

            // Signer CPF
            var identifierValue = $('#cpf').val();

            // Signer CRM
            var crmValue = $('#crm').val() || '123456';

            // CRM UF
            var ufValue = $('#uf').val() || 'DF';

            // Patient name
            var namePatient = $('#paciente').val();

            // Patient CPF
            var patientIdentifier = $('#cpf-paciente').val();

            // Medication name
            var medicationValue = $('#medicamento').val();


            // Loading while the document is created
            var loadingHidden = $('#loadingHeader');
            loadingHidden.show();

            // set to true if the user wants to see preview of the document
            allowPreviewDocument = $('#DocumentPreview').prop('checked');
            allowElectronicSignature = $('#ElectronicSignature').prop('checked');

            $.ajax({
                type: 'POST',
                url: '/Home/Prescription',
                data: JSON.stringify({
                    PatientName: namePatient,
                    PatientIdentifier: patientIdentifier,
                    Name: nameSigner,
                    CRM: crmValue,
                    UF: ufValue,
                    Email: emailValue,
                    MedicationName: medicationValue,
                    Identifier: identifierValue,
                    // This has been removed since prescription no longer uses electronic signature for Prescription documents,
                    // feel free to uncomment if necessary
                    //AllowElectronicSignature: allowElectronicSignature
                }),
                success: function (data) {
                    if (data) {
                        loadingHidden.hide();
                        embedUrl = data.embedUrl;
                        sign(data.embedUrl, allowPreviewDocument);
                        elem.style.visibility = 'hidden';
                    } else {
                        onError(elem);
                    }
                },
                error: function () {
                    onError(elem);
                },
                contentType: "application/json",
                dataType: 'json'
            });
        }

        function onError(elem) {
            $('#loadingHeader').hide();
            alert('Erro ao criar prescrição');
        }

        function hideButtons() {
            $('#infoData').prop('hidden', true);
            //$('#form-hide').prop('hidden', true);
            $('#whiteboard').removeAttr('hidden');
            $('#whiteboard').removeAttr('style').show();
        }


        function enableButton() {
            // Due to many fields requiring validation, it is better to trim their values outside of "if" statement
            var patientValue = $('#paciente').val().trim();
            var cpfPatientValue = $("#cpf-paciente").val().trim();
            var medicationValue = $('#medicamento').val().trim();

            if (patientValue !== "" && cpfPatientValue !== "" && medicationValue !== "") {
                $('#start').removeAttr('disabled');
            } else {
                $('#start').attr('disabled', true);
            }
        }

        function download() {
            if (documentId != null) {
                $.ajax({
                    type: 'GET',
                    url: '/Home/Prescription?id=' + documentId,
                    dataType: 'json',
                    success: function (data) {
                        if (data.url) {
                            window.location.href = data.url;
                        }
                    },
                    error: function () {
                        alert('Erro ao baixar prescrição');
                    }
                });
            }
        }

        function parseHtmlKey(embedUrl) {
            var startString = "https://signer-lac.azurewebsites.net/document/key/";
            var indexof = embedUrl.indexOf("/", startString.length + 1);
            var key = embedUrl.substr(startString.length, indexof - startString.length);
            return key
        }

        function openPrescriptionView() {
            if (embedUrl != null) {
                var key = parseHtmlKey(embedUrl);

                $.ajax({
                    type: 'GET',
                    url: '/Home/GetPrescriptionViewFromDocumentKey?key=' + key,
                    dataType: 'json',
                    success: function (data) {
                        if (data.url) {
                            window.open(data.url, '_blank');
                        }
                    },
                    error: function () {
                        alert('Erro ao visualizar prescrição');
                    }
                });


            }
        }

        function hideFormEntries(elem) {
            enablePrescriptionButton();
            if (elem.checked) {
                $('#box').hide();
            } else {
                $('#box').show();
            }
        }

        function applyCpfMask(input) {
            let value = input.value.replace(/\D/g, ''); // Remove qualquer caractere que não seja dígito
            value = value.replace(/\D/g, "")                    //Remove tudo o que não é dígito
            value = value.replace(/(\d{3})(\d)/, "$1.$2")       //Coloca um ponto entre o terceiro e o quarto dígitos
            value = value.replace(/(\d{3})(\d)/, "$1.$2")       //Coloca um ponto entre o terceiro e o quarto dígitos
            //de novo (para o segundo bloco de números)
            value = value.replace(/(\d{3})(\d{1,2})$/, "$1-$2") //Coloca um hífen entre o terceiro e o quarto dígitos
            input.value = value;
        }

    </script>
}



